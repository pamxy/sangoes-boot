#加密
jasypt:
  encryptor:
    password: sangoes
# Tomcat
server:
  tomcat:
    uri-encoding: UTF-8
    max-threads: 1000
    min-spare-threads: 30
  port: 8080
  servlet:
    context-path: /api
#日志
logging:
  level: debug
  level.sangoes.uc: debug
  path: logs/
  file: sangoes-uc.log
#application
spring:
  profiles:
    active: dev #dev 开发 prod 生产(部署) test测试环境
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB
      enabled: true
  mvc:
    view:
      prefix: /templates/
      suffix: .ftl
  freemarker:
    cache: false
    request-context-attribute: request
  # cache为redis 可以切换
#  cache:
#    type: redis
#mybatis
mybatis-plus:
  mapper-locations: classpath:/mapper/**/*Mapper.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.sangoes.boot.uc.modules.admin.entity
  typeEnumsPackage: com.sangoes.boot.uc.modules.admin.entity.enums
  global-config:
    # 数据库相关配置
    db-config:
      #主键类型  AUTO:"数据库ID自增", INPUT:"用户输入ID",ID_WORKER:"全局唯一ID (数字类型唯一ID)", UUID:"全局唯一ID UUID";
      id-type: id_worker
      #字段策略 IGNORED:"忽略判断",NOT_NULL:"非 NULL 判断"),NOT_EMPTY:"非空判断"
      field-strategy: not_empty
      #数据库大写下划线转换
      #capital-mode: true
      #逻辑删除配置
      logic-delete-value: 0 #删除
      logic-not-delete-value: 1 #不删错
      #驼峰下划线转换
      table-underline: true
      db-type: mysql
    #刷新mapper 调试神器
    refresh: true
  # 原生配置
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false
#swagger
swagger:
  enabled: true
  title: Sangoes API
  description: 用户中心
  version: 0.1
  license: MIT
  license-url: http://www.sangoes.com
  terms-of-service-url:
  contact:
    name: jerrychir
    email: jerrychir@163.com
    url: http://www.sangoes.com
  base-package: com.sangoes.boot
  base-path: /**
  exclude-path: /error, /ops/**

#系统自定义配置 system customer
# redis cache
redis:
  cache:
    # 缓存前缀必须加
    prefix: sangoes
    # 默认 1天
    expire: 432000
  # 设置cache value过期时间(秒)
  ttl:
    users: 86400
    menus: 86400
#忽略请求api
ignore:
  apis:
  - /signin
  - /user/signup
  - /user/signin/mobile
  - /user/signin/account
  - /encrypt/mobile/*
  - /encrypt/rsa/*
  - /captcha/sms/*
  - /captcha/image/*
  - /admin/user/logout

  urls:
  - /v2/api-docs
  - /swagger-resources/**
  - /swagger-ui.html
  - /configuration/**
  - /webjars/**
  - /public
---
#调试
debug: false
#datasource
spring:
  profiles: dev #开发
  devtools:
    restart:
      #devtools true开启热部署 false关闭热部署
      enabled: false
    add-properties: false
  #datasource
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:mysql://localhost:3306/boot?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&useSSL=false
    username: sangoes
    password: ENC(myS91HA17JVaJni8nGWPQTH+TnpDYMc6)
    continue-on-error: true
    platform: mysql
  #redis
  redis:
    # Redis数据库索引
    database: 0
    host: 127.0.0.1
    port: 6379
    # 密码（默认为空）
    password:
    # 连接超时时长（毫秒）
    timeout: 6000ms
    lettuce:
      pool:
        # 连接池最大连接数（使用负值表示没有限制）
        max-active: 1000
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1ms
        # 连接池中的最大空闲连接
        max-idle: 10
        # 连接池中的最小空闲连接
        min-idle: 5
  # rabbitmq 消息队列
  rabbitmq:
    # host ip
    host: 127.0.0.1
    # 端口(默认5762)
    port: 5672
    # 用户名
    username: sangoes
    # 密码
    password: Sangoes123456
    # 虚拟主机，一个broker里可以开设多个vhost，用作不同用户的权限分离
    virtual-host: /
    listener:
      simple:
        # 手动ACK 不开启自动ACK模式,目的是防止报错后未正确处理消息丢失 默认 为 none
        acknowledge-mode: manual
#logging
logging:
  level: warn
  level.org.springframework.security: DEBUG
#===================自定义================#
#oauth
security:
  jwt:
    token:
      secret-key: sangoes-boot #私钥
      expire-length: 3600000 #1小时 过期时间
#oss
aliyun:
  oss:
    endpoint: oss-cn-hangzhou.aliyuncs.com
    accessKeyId: ENC(5yr62XP5himTTP3J6/sZ1WG28e48iqxhl/e5yHjdWvU=)
    accessKeySecret: ENC(4tBqIZaUbqrMy9Mji441tLPg6lw3VJBJa3/5rWbSqTQ0IoR77d4tcA==)
    bucketName: sangoes
    host: https://sangoes.oss-cn-hangzhou.aliyuncs.com/
    key:
    fileHost: boot
#---
##datasource
#spring:
#  profiles: test #测试环境
#  #datasource
#  datasource:
#    type: com.zaxxer.hikari.HikariDataSource
#    url: jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PROT:3306}/boot?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&useSSL=false
#    username: sangoes
#    password: ENC(qxEYSC5UI1VloP3lVRLgjb72+oggaJff)
#    continue-on-error: true
#    platform: mysql
#  #redis
#  redis:
#    database: 0 # Redis数据库索引
#    host: ${REDIS_HOST:localhost}
#    port: ${REDIS_PORT:6379}
#    password: ENC(qxEYSC5UI1VloP3lVRLgjb72+oggaJff)     # 密码（默认为空）
#    timeout: 6000ms  # 连接超时时长（毫秒）
#    lettuce:
#      pool:
#        max-active: 1000  # 连接池最大连接数（使用负值表示没有限制）
#        max-wait: -1ms      # 连接池最大阻塞等待时间（使用负值表示没有限制）
#        max-idle: 10      # 连接池中的最大空闲连接
#        min-idle: 5       # 连接池中的最小空闲连接
##logging
#logging:
#  level: warn
#  level.org.springframework.security: DEBUG
##===================自定义================#
##oauth
#security:
#  jwt:
#    token:
#      secret-key: sangoes-boot #私钥
#      expire-length: 3600000 #1小时 过期时间
##oss
#aliyun:
#  oss:
#    endpoint: oss-cn-hangzhou.aliyuncs.com
#    accessKeyId: ENC(5yr62XP5himTTP3J6/sZ1WG28e48iqxhl/e5yHjdWvU=)
#    accessKeySecret: ENC(4tBqIZaUbqrMy9Mji441tLPg6lw3VJBJa3/5rWbSqTQ0IoR77d4tcA==)
#    bucketName: sangoes
#    host: https://sangoes.oss-cn-hangzhou.aliyuncs.com/
#    key:
#    fileHost: boot
#---
##datasource
#spring:
#  profiles: prod #生产环境
#  #datasource
#  datasource:
#    type: com.zaxxer.hikari.HikariDataSource
#    url: jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PROT:3306}/boot?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&useSSL=false
#    username: root
#    password: ENC(qxEYSC5UI1VloP3lVRLgjb72+oggaJff)
#    continue-on-error: true
#    platform: mysql
#  #redis
#  redis:
#    database: 0 # Redis数据库索引
#    host: ${REDIS_PORT:localhost}
#    port: ${REDIS_PORT:6379}
#    password: ENC(qxEYSC5UI1VloP3lVRLgjb72+oggaJff)     # 密码（默认为空）
#    timeout: 6000ms  # 连接超时时长（毫秒）
#    lettuce:
#      pool:
#        max-active: 1000  # 连接池最大连接数（使用负值表示没有限制）
#        max-wait: -1ms      # 连接池最大阻塞等待时间（使用负值表示没有限制）
#        max-idle: 10      # 连接池中的最大空闲连接
#        min-idle: 5       # 连接池中的最小空闲连接
##logging
#logging:
#  level: warn
#  level.org.springframework.security: DEBUG
##===================自定义================#
##oauth
#security:
#  jwt:
#    token:
#      secret-key: sangoes-boot #私钥
#      expire-length: 3600000 #1小时 过期时间
##oss
#aliyun:
#  oss:
#    endpoint: oss-cn-hangzhou.aliyuncs.com
#    accessKeyId: ENC(5yr62XP5himTTP3J6/sZ1WG28e48iqxhl/e5yHjdWvU=)
#    accessKeySecret: ENC(4tBqIZaUbqrMy9Mji441tLPg6lw3VJBJa3/5rWbSqTQ0IoR77d4tcA==)
#    bucketName: sangoes
#    host: https://sangoes.oss-cn-hangzhou.aliyuncs.com/
#    key:
#    fileHost: boot