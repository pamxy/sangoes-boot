spring:
  profiles: dev #开发
  #devtools true开启热部署 false关闭热部署
  devtools:
    restart:
      enabled: false
    add-properties: false
  # 加入sharding jdbc 不然会报错
  main:
    allow-bean-definition-overriding: true
  # 普通 datasource
  #  datasource:
  #    type: com.zaxxer.hikari.HikariDataSource
  #    url: jdbc:mysql://localhost:3306/boot?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&useSSL=false
  #    username: sangoes
  #    password: ENC(myS91HA17JVaJni8nGWPQTH+TnpDYMc6)
  #    continue-on-error: true
  #    platform: mysql
  #redis
  redis:
    # Redis数据库索引
    database: 0
    host: 127.0.0.1
    port: 6379
    # 密码（默认为空）
    password:
    # 连接超时时长（毫秒）
    timeout: 6000ms
    lettuce:
      pool:
        # 连接池最大连接数（使用负值表示没有限制）
        max-active: 1000
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1ms
        # 连接池中的最大空闲连接
        max-idle: 10
        # 连接池中的最小空闲连接
        min-idle: 5
  # rabbitmq 消息队列
  rabbitmq:
    # host ip
    host: 127.0.0.1
    # 端口(默认5762)
    port: 5672
    # 用户名
    username: sangoes
    # 密码
    password: Sangoes123456
#    # 虚拟主机，一个broker里可以开设多个vhost，用作不同用户的权限分离
#    virtual-host: /
#    listener:
#      simple:
#        # 手动ACK 不开启自动ACK模式,目的是防止报错后未正确处理消息丢失 默认 为 none
#        acknowledge-mode: manual

#调试
debug: false
#logging
logging:
  level: warn
#  level.org.springframework.security: DEBUG

#======================================自定义================================#
#oauth
security:
  jwt:
    token:
      secret-key: sangoes-boot #私钥
      expire-length: 3600000 #1小时 过期时间

#sangoes
sangoes:
  #oss
  aliyun:
    oss:
      endpoint: oss-cn-hangzhou.aliyuncs.com
      accessKeyId: ENC(5yr62XP5himTTP3J6/sZ1WG28e48iqxhl/e5yHjdWvU=)
      accessKeySecret: ENC(4tBqIZaUbqrMy9Mji441tLPg6lw3VJBJa3/5rWbSqTQ0IoR77d4tcA==)
      bucketName: sangoes
      host: https://sangoes.oss-cn-hangzhou.aliyuncs.com/
      key:
      fileHost: boot
  # body加密
  crypto:
    encoding: UTF-8
    encrypt:
      key: sangoes
      type: aes
    decrypt:
      key: sangoes
      type: aes
  # netty socket配置
  # web消息配置
  web:
    msg:
      host: 127.0.0.1
      path: /web/msg
      port: 9191
  # elastic
  elastic:
    zookeeper:
      serverLists: 127.0.0.1:2181
      namespace: 0=Beijing,1=Shanghai,2=Guangzhou
#================================sharding-jdbc配置================================#
sharding:
  jdbc:
    datasource:
      # 数据源名称，多数据源以逗号分隔
      names: ms0
      ms0:
        # 数据库连接池类名称
        type: com.zaxxer.hikari.HikariDataSource
        # 数据库驱动类名
        driver-class-name: com.mysql.cj.jdbc.Driver
        # 数据库url连接
        jdbc-url: jdbc:mysql://localhost:3306/boot?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&useSSL=false
        # 数据库用户名
        username: sangoes
        # 数据库密码
        password: ENC(myS91HA17JVaJni8nGWPQTH+TnpDYMc6)
    config:
      sharding:
        # 数据分片
        tables:
          # 分片表名
          sys_log:
            # 数据节点 多个表以逗号分隔
            actual-data-nodes: ms0.sys_log_${0..1}
            # 分表策略
            table-strategy:
              # 行表达式分片策略
              inline:
                # 分片列名称
                sharding-column: id
                # 分片算法行表达式，需符合groovy语法
                algorithm-expression: sys_log_${id % 2}
            # 自增列名称，缺省表示不使用自增主键生成器
            key-generator-column-name: id

